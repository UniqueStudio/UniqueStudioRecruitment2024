// ly: feishu api returns all nodes, this func parse array to tree
// generated by monica
export function parseDepartments(data) {
  // 创建一个映射表，方便通过 id 快速查找节点
  const idMap = {};
  data.forEach((node) => {
    idMap[node.id] = { ...node, children: [] };
  });

  // 初始化根节点
  let root = null;

  // 构建树
  data.forEach((node) => {
    const currentNode = idMap[node.id];
    const parentId = node.mind_map.parent_id;

    // 如果有父节点，将该节点添加到父节点的 children 数组中
    if (parentId) {
      if (!idMap[parentId]) {
        idMap[parentId] = { children: [] }; // 如果父节点不存在，初始化
      }
      idMap[parentId].children.push(currentNode);
    } else {
      // 如果没有父节点，说明是根节点
      root = currentNode;
    }
  });

  // 创建结果对象
  const result = {};

  // 遍历根节点的 children（学院）
  root.children.forEach((college) => {
    // 学院名作为键
    const collegeName = college.text.text;

    // 学院下的专业（子节点）的名称数组
    const majors = college.children.map((major) => major.text.text);

    // 将学院和专业添加到结果对象中
    result[collegeName] = majors;
  });

  return result;
}
